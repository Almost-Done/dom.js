// Interfaces from DOM Level 3 Events working draft

interface UIEvent : Event {
  readonly attribute Window view;
  readonly attribute long            detail;
  void                               initUIEvent(in DOMString typeArg,
                                                 in boolean canBubbleArg,
                                                 in boolean cancelableArg,
                                                 in Window viewArg,
                                                 in long detailArg);
};

interface MouseEvent : UIEvent {
  readonly attribute long            screenX;
  readonly attribute long            screenY;
  readonly attribute long            clientX;
  readonly attribute long            clientY;
  readonly attribute boolean         ctrlKey;
  readonly attribute boolean         shiftKey;
  readonly attribute boolean         altKey;
  readonly attribute boolean         metaKey;
  readonly attribute unsigned short  button;
  readonly attribute unsigned short  buttons;
  readonly attribute                 EventTarget     relatedTarget;
  void                               initMouseEvent(in DOMString typeArg,
                                                in boolean canBubbleArg,
                                                in boolean cancelableArg,
                                                in Window viewArg,
                                                in long detailArg,
                                                in long screenXArg,
                                                in long screenYArg,
                                                in long clientXArg,
                                                in long clientYArg,
                                                in boolean ctrlKeyArg,
                                                in boolean altKeyArg,
                                                in boolean shiftKeyArg,
                                                in boolean metaKeyArg,
                                                in unsigned short buttonArg,
                                                in EventTarget relatedTargetArg);
  // Introduced in DOM Level 3:
  boolean                            getModifierState(in DOMString keyArg);
};

interface WheelEvent : MouseEvent {
  readonly attribute long            deltaX;
  readonly attribute long            deltaY;
  readonly attribute long            deltaZ;
  void                               initWheelEvent(in DOMString typeArg,
                                                in boolean canBubbleArg,
                                                in boolean cancelableArg,
                                                in Window viewArg,
                                                in long detailArg,
                                                in long screenXArg,
                                                in long screenYArg,
                                                in long clientXArg,
                                                in long clientYArg,
                                                in long deltaXArg,
                                                in long deltaYArg,
                                                in long deltaZArg,
                                                in boolean ctrlKeyArg,
                                                in boolean altKeyArg,
                                                in boolean shiftKeyArg,
                                                in boolean metaKeyArg,
                                                in unsigned short buttonArg,
                                                in EventTarget relatedTargetArg);
  // Introduced in DOM Level 3:
  boolean                            getModifierState(in DOMString keyArg);
};


interface KeyboardEvent : UIEvent {
  readonly attribute DOMString       key;
  readonly attribute long            keyCode;
  void                               initKeyboardEvent(in DOMString type,
                                              in DOMString key);
};

interface VoiceEvent : UIEvent {
  readonly attribute DOMString       command;
  void                               initKeyboardEvent(in DOMString type,
                                              in DOMString command);
};

interface SpatialInputEvent : UIEvent {
  readonly attribute boolean         isPressed;
  readonly attribute double          x;
  readonly attribute double          y;
  readonly attribute double          z;
  readonly attribute long            sourceKind;
  void                               initSpatialInputEvent(in DOMString type,
                                              in boolean isPressedArg,
                                              in double xArg,
                                              in double yArg,
                                              in double zArg,
                                              in double sourceKindArg);
};